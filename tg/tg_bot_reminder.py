from datetime import datetime, timedelta, time
from db import dialogs_db

async def handle_remind(update, context):
    query = update.callback_query
    await query.answer()

    # ‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
    if not context.job_queue:
        print("‚ö†Ô∏è JobQueue is not initialized!")
        await query.edit_message_text("‚ö†Ô∏è –û—à–∏–±–∫–∞: –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.")
        return

    data = query.data.split(":")
    if data[0] == "remind":
        visit_date = datetime.fromisoformat(data[1])
        reminder_time = datetime.combine((visit_date - timedelta(days=1)).date(), time(hour=10, minute=0))

        job_name = f"reminder_{query.from_user.id}_{visit_date.date()}"

        # ‚úÖ –£–±–∏—Ä–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –∑–∞–¥–∞—á—É, –µ—Å–ª–∏ –æ–Ω–∞ –±—ã–ª–∞
        existing_jobs = context.job_queue.get_jobs_by_name(job_name)
        if existing_jobs:
            for job in existing_jobs:
                job.schedule_removal()

        # ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É
        await dialogs_db.save_reminder(query.from_user.id, visit_date, reminder_time)

        # ‚úÖ –°—Ç–∞–≤–∏–º –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
        context.job_queue.run_once(send_reminder, reminder_time, chat_id=query.from_user.id, name=job_name)
        dt = datetime.fromisoformat(data[1])
        formatted_date = dt.strftime("%d.%m.%Y")
        await query.edit_message_text(f"‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ! –û—Å–º–æ—Ç—Ä –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω –Ω–∞ {formatted_date}.\n–Ø –Ω–∞–ø–æ–º–Ω—é –∑–∞ –¥–µ–Ω—å –¥–æ –≤–∏–∑–∏—Ç–∞ –≤ 10:00.")

async def send_reminder(context):
    await context.bot.send_message(
        chat_id=context.job.chat_id,
        text="üîî –ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —É –≤–∞—Å –∑–∞–≤—Ç—Ä–∞ –≤–∏–∑–∏—Ç –≤ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—é. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤–∑—è—Ç—å –ø–∞—Å–ø–æ—Ä—Ç!"
    )
